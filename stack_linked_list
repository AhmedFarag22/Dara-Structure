#include<iostream>
using namespace std;

template<class t>
class stack
{


	struct node
	{
		t item;
		node* next;

	};
	node* top, * cur;
public:
	stack() {
		top = NULL;
		cur = NULL;
	}


	
	void push(t newitem) {
		node* newitemptr = new node;
		if (newitemptr == NULL)
			cout << "stack is empty";
		else {
			newitemptr->item = newitem;
			newitemptr->next = top;
			top = newitemptr;

		}
	}

	bool isempty() {
		return top == NULL;
	}
	void pop() {
		if (isempty())
			cout << "stack is empty";
		else {
			node* temp = top;
			top = top->next;
			temp = temp->next = NULL;
			delete temp;
		}

	}



	void gettop(t& stacktop) {
		if (isempty())
			cout << "stack is empty";
		else {
			stacktop = top->item;
		}
	}

	void display() {
		cur = top;
		cout << "\nitem in stack : ";
		cout << "[";
		while (cur != NULL)
		{
			cout << cur->item << " ";
			cur = cur->next;
		}
		cout << "]";
	}


};

int main() {
	stack<int>s;
	s.push(100);
	s.push(200);
	s.push(300);
	s.pop();
	s.display();
	int x = 0;
	cout << endl;

	s.gettop(x);
	cout << x << endl;



}
