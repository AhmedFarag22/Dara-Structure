#include<iostream>
using namespace std;
class arrayList {

	int* arr;
	int maxSize;
	int length;
public:
	arrayList(int s) {
		if (s < 0)
			maxSize = 10;
		else
			maxSize = s;
		length = 0;
		arr = new int[maxSize];
	}
	bool isEmpty() {
		return length == 0;
	}
	bool isFull() {
		return length == maxSize;
	}
	int getSize() {
		return length;
	}
	void print() {
		for (size_t i = 0; i < length; i++)
		{
			cout << arr[i] << "  ";
		}
		cout << endl;
	}
	void insertAtPos(int  pos, int element) {
		if (isFull())
			cout << "list Full";
		else if (pos<0 || pos>length)
			cout << "out of range";
		else 
			for (size_t i = length; i > pos; i--) {
				arr[i] = arr[i - 1];
			}

		arr[pos] = element;
		length++;

			
	}

	void insertAtEnd(int element)
	{
		if (isFull())
			cout << "list is full";
		else
			arr[length] = element;
		length++;


	}
	int search(int element) {
		for (size_t i = 0; i < length; i++)
		{
			if (arr[i] == element)
				return i;
			
		}
		return -1;
	}

	void insertNoDuplicate(int element) 
	{

		if (search(element) == -1)
			insertAtEnd(element);
		else
			cout << "the element is there";

	}

	void updateAt(int pos, int element)
	{
		if (pos < 0 || pos >= length)
			cout << "out of range";
		else
			arr[pos] = element;
	}

	int getElement(int pos) {

		if (pos < 0 || pos >= length)
			cout << "out of range";
		else
			return arr[pos];

	}
	void removeAtPosition(int pos)
	{
		if (isEmpty())
			cout << "list empty";
		else if (pos<0 || pos>length)
			cout << "out of range";
		else
			for (size_t i = pos; i < length; i++)
			{
				arr[i] = arr[i + 1];
			}
		length--;
	}
	~arrayList() {
		delete[]arr;
	}

	void clear() {
		length = 0;
	}









};




int main() {
	arrayList ar(100);
	ar.insertAtPos(0, 10);
	ar.insertAtPos(1, 20);
	ar.insertAtPos(2, 30);
	ar.insertNoDuplicate(30);
	ar.updateAt(0, 5);
	ar.print();
}

//search O(n)
//insert O(n)
//delete O(n)








